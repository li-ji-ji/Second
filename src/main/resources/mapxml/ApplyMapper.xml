<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.second.lhj.apply.mapper.ApplyMapper" >
  <resultMap id="BaseResultMap" type="cn.second.lhj.apply.po.Apply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="kind_id" property="kindId" jdbcType="INTEGER" />
    <result column="kind_name" property="kindName" jdbcType="VARCHAR" />
    <result column="stu_id" property="stuId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="check_status" property="checkStatus" jdbcType="INTEGER" />
    <result column="support_doc" property="supportDoc" jdbcType="VARCHAR" />
    <result column="support_file" property="supportFile" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="integral" property="integral" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, kind_id, kind_name, stu_id, status, check_status, support_doc, support_file, 
    apply_time, integral
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.second.lhj.apply.po.ApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.second.lhj.apply.po.ApplyExample" >
    delete from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.second.lhj.apply.po.Apply" >
    insert into apply (id, kind_id, kind_name, 
      stu_id, status, check_status, 
      support_doc, support_file, apply_time, 
      integral)
    values (#{id,jdbcType=INTEGER}, #{kindId,jdbcType=INTEGER}, #{kindName,jdbcType=VARCHAR}, 
      #{stuId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{checkStatus,jdbcType=INTEGER}, 
      #{supportDoc,jdbcType=VARCHAR}, #{supportFile,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, 
      #{integral,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.second.lhj.apply.po.Apply" >
    insert into apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="kindId != null" >
        kind_id,
      </if>
      <if test="kindName != null" >
        kind_name,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="supportDoc != null" >
        support_doc,
      </if>
      <if test="supportFile != null" >
        support_file,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="integral != null" >
        integral,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="kindId != null" >
        #{kindId,jdbcType=INTEGER},
      </if>
      <if test="kindName != null" >
        #{kindName,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="supportDoc != null" >
        #{supportDoc,jdbcType=VARCHAR},
      </if>
      <if test="supportFile != null" >
        #{supportFile,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.second.lhj.apply.po.ApplyExample" resultType="java.lang.Integer" >
    select count(*) from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.kindId != null" >
        kind_id = #{record.kindId,jdbcType=INTEGER},
      </if>
      <if test="record.kindName != null" >
        kind_name = #{record.kindName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=INTEGER},
      </if>
      <if test="record.supportDoc != null" >
        support_doc = #{record.supportDoc,jdbcType=VARCHAR},
      </if>
      <if test="record.supportFile != null" >
        support_file = #{record.supportFile,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update apply
    set id = #{record.id,jdbcType=INTEGER},
      kind_id = #{record.kindId,jdbcType=INTEGER},
      kind_name = #{record.kindName,jdbcType=VARCHAR},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      check_status = #{record.checkStatus,jdbcType=INTEGER},
      support_doc = #{record.supportDoc,jdbcType=VARCHAR},
      support_file = #{record.supportFile,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      integral = #{record.integral,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.second.lhj.apply.po.Apply" >
    update apply
    <set >
      <if test="kindId != null" >
        kind_id = #{kindId,jdbcType=INTEGER},
      </if>
      <if test="kindName != null" >
        kind_name = #{kindName,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="supportDoc != null" >
        support_doc = #{supportDoc,jdbcType=VARCHAR},
      </if>
      <if test="supportFile != null" >
        support_file = #{supportFile,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.second.lhj.apply.po.Apply" >
    update apply
    set kind_id = #{kindId,jdbcType=INTEGER},
      kind_name = #{kindName,jdbcType=VARCHAR},
      stu_id = #{stuId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      check_status = #{checkStatus,jdbcType=INTEGER},
      support_doc = #{supportDoc,jdbcType=VARCHAR},
      support_file = #{supportFile,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      integral = #{integral,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>