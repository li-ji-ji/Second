<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.second.lhj.applykind.mapper.ApplyKindMapper" >
  <resultMap id="BaseResultMap" type="cn.second.lhj.applykind.po.ApplyKind" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="kind_name" property="kindName" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="kind_integral" property="kindIntegral" jdbcType="DOUBLE" />
    <result column="kind_intro" property="kindIntro" jdbcType="VARCHAR" />
    <result column="need_supp_doc" property="needSuppDoc" jdbcType="INTEGER" />
    <result column="need_supp_file" property="needSuppFile" jdbcType="INTEGER" />
    <result column="need_check" property="needCheck" jdbcType="INTEGER" />
    <result column="check_kind" property="checkKind" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, kind_name, p_id, status, kind_integral, kind_intro, need_supp_doc, need_supp_file, 
    need_check, check_kind
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.second.lhj.applykind.po.ApplyKindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from apply_kind
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from apply_kind
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.second.lhj.applykind.po.ApplyKindExample" >
    delete from apply_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.second.lhj.applykind.po.ApplyKind" >
    insert into apply_kind (id, kind_name, p_id, 
      status, kind_integral, kind_intro, 
      need_supp_doc, need_supp_file, need_check, 
      check_kind)
    values (#{id,jdbcType=INTEGER}, #{kindName,jdbcType=VARCHAR}, #{pId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{kindIntegral,jdbcType=DOUBLE}, #{kindIntro,jdbcType=VARCHAR}, 
      #{needSuppDoc,jdbcType=INTEGER}, #{needSuppFile,jdbcType=INTEGER}, #{needCheck,jdbcType=INTEGER}, 
      #{checkKind,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.second.lhj.applykind.po.ApplyKind" >
    insert into apply_kind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="kindName != null" >
        kind_name,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="kindIntegral != null" >
        kind_integral,
      </if>
      <if test="kindIntro != null" >
        kind_intro,
      </if>
      <if test="needSuppDoc != null" >
        need_supp_doc,
      </if>
      <if test="needSuppFile != null" >
        need_supp_file,
      </if>
      <if test="needCheck != null" >
        need_check,
      </if>
      <if test="checkKind != null" >
        check_kind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="kindName != null" >
        #{kindName,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="kindIntegral != null" >
        #{kindIntegral,jdbcType=DOUBLE},
      </if>
      <if test="kindIntro != null" >
        #{kindIntro,jdbcType=VARCHAR},
      </if>
      <if test="needSuppDoc != null" >
        #{needSuppDoc,jdbcType=INTEGER},
      </if>
      <if test="needSuppFile != null" >
        #{needSuppFile,jdbcType=INTEGER},
      </if>
      <if test="needCheck != null" >
        #{needCheck,jdbcType=INTEGER},
      </if>
      <if test="checkKind != null" >
        #{checkKind,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.second.lhj.applykind.po.ApplyKindExample" resultType="java.lang.Integer" >
    select count(*) from apply_kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update apply_kind
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.kindName != null" >
        kind_name = #{record.kindName,jdbcType=VARCHAR},
      </if>
      <if test="record.pId != null" >
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.kindIntegral != null" >
        kind_integral = #{record.kindIntegral,jdbcType=DOUBLE},
      </if>
      <if test="record.kindIntro != null" >
        kind_intro = #{record.kindIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.needSuppDoc != null" >
        need_supp_doc = #{record.needSuppDoc,jdbcType=INTEGER},
      </if>
      <if test="record.needSuppFile != null" >
        need_supp_file = #{record.needSuppFile,jdbcType=INTEGER},
      </if>
      <if test="record.needCheck != null" >
        need_check = #{record.needCheck,jdbcType=INTEGER},
      </if>
      <if test="record.checkKind != null" >
        check_kind = #{record.checkKind,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update apply_kind
    set id = #{record.id,jdbcType=INTEGER},
      kind_name = #{record.kindName,jdbcType=VARCHAR},
      p_id = #{record.pId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      kind_integral = #{record.kindIntegral,jdbcType=DOUBLE},
      kind_intro = #{record.kindIntro,jdbcType=VARCHAR},
      need_supp_doc = #{record.needSuppDoc,jdbcType=INTEGER},
      need_supp_file = #{record.needSuppFile,jdbcType=INTEGER},
      need_check = #{record.needCheck,jdbcType=INTEGER},
      check_kind = #{record.checkKind,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.second.lhj.applykind.po.ApplyKind" >
    update apply_kind
    <set >
      <if test="kindName != null" >
        kind_name = #{kindName,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="kindIntegral != null" >
        kind_integral = #{kindIntegral,jdbcType=DOUBLE},
      </if>
      <if test="kindIntro != null" >
        kind_intro = #{kindIntro,jdbcType=VARCHAR},
      </if>
      <if test="needSuppDoc != null" >
        need_supp_doc = #{needSuppDoc,jdbcType=INTEGER},
      </if>
      <if test="needSuppFile != null" >
        need_supp_file = #{needSuppFile,jdbcType=INTEGER},
      </if>
      <if test="needCheck != null" >
        need_check = #{needCheck,jdbcType=INTEGER},
      </if>
      <if test="checkKind != null" >
        check_kind = #{checkKind,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.second.lhj.applykind.po.ApplyKind" >
    update apply_kind
    set kind_name = #{kindName,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      kind_integral = #{kindIntegral,jdbcType=DOUBLE},
      kind_intro = #{kindIntro,jdbcType=VARCHAR},
      need_supp_doc = #{needSuppDoc,jdbcType=INTEGER},
      need_supp_file = #{needSuppFile,jdbcType=INTEGER},
      need_check = #{needCheck,jdbcType=INTEGER},
      check_kind = #{checkKind,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>